[{"path":"https://klbarnes20.github.io/caliper/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 caliper authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://klbarnes20.github.io/caliper/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Kelly Barnes. Author, maintainer.","code":""},{"path":"https://klbarnes20.github.io/caliper/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Barnes K (2023). caliper: Tools conduct Carpentries Assessment. R package version 0.0.0.9000, https://klbarnes20.github.io/caliper/.","code":"@Manual{,   title = {caliper: Tools to conduct Carpentries Assessment},   author = {Kelly Barnes},   year = {2023},   note = {R package version 0.0.0.9000},   url = {https://klbarnes20.github.io/caliper/}, }"},{"path":"https://klbarnes20.github.io/caliper/index.html","id":"caliper","dir":"","previous_headings":"","what":"Tools to conduct Carpentries Assessment","title":"Tools to conduct Carpentries Assessment","text":"goal caliper provide tools aid Carpentries assessment work. package work progress.","code":""},{"path":"https://klbarnes20.github.io/caliper/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Tools to conduct Carpentries Assessment","text":"can install development version caliper GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"klbarnes20/caliper\")"},{"path":"https://klbarnes20.github.io/caliper/reference/add_text_geom.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Data Labels to a ggplot2 Plot — add_text_geom","title":"Add Data Labels to a ggplot2 Plot — add_text_geom","text":"function adds text labels ggplot2 plot. supports two types labels: counts percentages. labels can customized terms accuracy, color, vertical adjustment, font face.","code":""},{"path":"https://klbarnes20.github.io/caliper/reference/add_text_geom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Data Labels to a ggplot2 Plot — add_text_geom","text":"","code":"add_text_geom(   label_type = \"count\",   accuracy = 0.1,   color = \"white\",   vjust = 1.6,   fontface = \"bold\",   nudge_x = 0 )"},{"path":"https://klbarnes20.github.io/caliper/reference/add_text_geom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Data Labels to a ggplot2 Plot — add_text_geom","text":"label_type character string specifying type label add. Acceptable values \"count\" count labels \"percent\" percentage labels. accuracy optional numeric value specifying number decimal places percentage labels. applicable label_type \"percent\". Default 0.1. color character string specifying color text labels. Default \"white\". vjust numeric value vertical adjustment text labels. Positive values move text , negative values move . Default 1.6. fontface character string specifying font face text labels. Common values \"plain\", \"bold\", \"italic\", \"bold.italic\". Default \"bold\". nudge_x numeric value specifying horizontal adjustment text labels. Positive values move text right, negative values move left. Default 0.","code":""},{"path":"https://klbarnes20.github.io/caliper/reference/add_text_geom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Data Labels to a ggplot2 Plot — add_text_geom","text":"ggplot2 layer specified text labels added.","code":""},{"path":"https://klbarnes20.github.io/caliper/reference/badged_n_days.html","id":null,"dir":"Reference","previous_headings":"","what":"Count of Trainees Badged Within a Given Number of Days Since Training — badged_n_days","title":"Count of Trainees Badged Within a Given Number of Days Since Training — badged_n_days","text":"function calculates number trainees badged within specified number days since training.","code":""},{"path":"https://klbarnes20.github.io/caliper/reference/badged_n_days.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count of Trainees Badged Within a Given Number of Days Since Training — badged_n_days","text":"","code":"badged_n_days(trainee_data, days_threshold = 90)"},{"path":"https://klbarnes20.github.io/caliper/reference/badged_n_days.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count of Trainees Badged Within a Given Number of Days Since Training — badged_n_days","text":"trainee_data data.frame raw data frame containing trainee data columns training instr_badge date strings. days_threshold integer maximum number days training badging consider. Defaults 90 days.","code":""},{"path":"https://klbarnes20.github.io/caliper/reference/badged_n_days.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count of Trainees Badged Within a Given Number of Days Since Training — badged_n_days","text":"integer Returns count trainees badged within specified number days since training.","code":""},{"path":"https://klbarnes20.github.io/caliper/reference/badged_n_days.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Count of Trainees Badged Within a Given Number of Days Since Training — badged_n_days","text":"","code":"if (FALSE) {   raw_trainee_data <- data.frame(     training = c(\"2023-01-01\", \"2023-01-10\"),     instr_badge = c(\"2023-02-01\", NA)   )   count <- badged_n_days(raw_trainee_data, 90)   print(count) }"},{"path":"https://klbarnes20.github.io/caliper/reference/calculate_avg_time_to_checkout.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Average Time to Complete Checkout — calculate_avg_time_to_checkout","title":"Calculate Average Time to Complete Checkout — calculate_avg_time_to_checkout","text":"function computes average number days trainees take complete checkout process, considering trainees involved specified number days.","code":""},{"path":"https://klbarnes20.github.io/caliper/reference/calculate_avg_time_to_checkout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Average Time to Complete Checkout — calculate_avg_time_to_checkout","text":"","code":"calculate_avg_time_to_checkout(trainee_progress, days_threshold = 90)"},{"path":"https://klbarnes20.github.io/caliper/reference/calculate_avg_time_to_checkout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Average Time to Complete Checkout — calculate_avg_time_to_checkout","text":"trainee_progress data.frame data frame containing columns 'instr_badge' 'training', represent checkout completion training dates, respectively. days_threshold integer minimum number days since training include trainee calculation. Default 90 days.","code":""},{"path":"https://klbarnes20.github.io/caliper/reference/calculate_avg_time_to_checkout.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Average Time to Complete Checkout — calculate_avg_time_to_checkout","text":"numeric Returns average number days complete checkout, rounded two decimal places.","code":""},{"path":"https://klbarnes20.github.io/caliper/reference/calculate_avg_time_to_checkout.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Average Time to Complete Checkout — calculate_avg_time_to_checkout","text":"","code":"if (FALSE) {   trainee_progress <- fetch_redash(388)   avg_time <- calculate_avg_time_to_checkout(trainee_progress) }"},{"path":"https://klbarnes20.github.io/caliper/reference/calculate_checkout_not_finished.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Number of Trainees Who Started but Haven't Finished Checkout — calculate_checkout_not_finished","title":"Calculate Number of Trainees Who Started but Haven't Finished Checkout — calculate_checkout_not_finished","text":"function calculates number trainees started completed checkout process within specified number days since training.","code":""},{"path":"https://klbarnes20.github.io/caliper/reference/calculate_checkout_not_finished.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Number of Trainees Who Started but Haven't Finished Checkout — calculate_checkout_not_finished","text":"","code":"calculate_checkout_not_finished(trainee_progress, days_threshold = 90)"},{"path":"https://klbarnes20.github.io/caliper/reference/calculate_checkout_not_finished.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Number of Trainees Who Started but Haven't Finished Checkout — calculate_checkout_not_finished","text":"trainee_progress data.frame data frame containing progress indicators trainee. days_threshold integer number days since training consider. Default 90 days.","code":""},{"path":"https://klbarnes20.github.io/caliper/reference/calculate_checkout_not_finished.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Number of Trainees Who Started but Haven't Finished Checkout — calculate_checkout_not_finished","text":"integer Returns number trainees started finished checkout process.","code":""},{"path":"https://klbarnes20.github.io/caliper/reference/calculate_checkout_not_finished.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Number of Trainees Who Started but Haven't Finished Checkout — calculate_checkout_not_finished","text":"","code":"if (FALSE) {   raw_data <- data.frame(...)   n_not_finished_checkout <- calculate_checkout_not_finished(raw_data, 90) }"},{"path":"https://klbarnes20.github.io/caliper/reference/calculate_checkout_rate.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Checkout Rate — calculate_checkout_rate","title":"Calculate Checkout Rate — calculate_checkout_rate","text":"function calculates checkout rate based number trainees earned badge within specified number days since training.","code":""},{"path":"https://klbarnes20.github.io/caliper/reference/calculate_checkout_rate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Checkout Rate — calculate_checkout_rate","text":"","code":"calculate_checkout_rate(trainee_data, days_threshold = 90)"},{"path":"https://klbarnes20.github.io/caliper/reference/calculate_checkout_rate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Checkout Rate — calculate_checkout_rate","text":"trainee_data data.frame raw data frame containing trainee data. columns training instr_badge date strings. days_threshold integer time frame like calculate checkout rate, days. Default 90 days.","code":""},{"path":"https://klbarnes20.github.io/caliper/reference/calculate_checkout_rate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Checkout Rate — calculate_checkout_rate","text":"numeric Returns checkout rate percentage.","code":""},{"path":"https://klbarnes20.github.io/caliper/reference/calculate_checkout_rate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Checkout Rate — calculate_checkout_rate","text":"","code":"if (FALSE) {   raw_data <- data.frame(...)   checkout_rate <- calculate_checkout_rate(raw_data, 90) }"},{"path":"https://klbarnes20.github.io/caliper/reference/calculate_checkout_started.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Number of Trainees Who Have Started Checkout — calculate_checkout_started","title":"Calculate Number of Trainees Who Have Started Checkout — calculate_checkout_started","text":"function calculates number trainees started checkout process within specified number days since training.","code":""},{"path":"https://klbarnes20.github.io/caliper/reference/calculate_checkout_started.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Number of Trainees Who Have Started Checkout — calculate_checkout_started","text":"","code":"calculate_checkout_started(trainee_progress, days_threshold = 90)"},{"path":"https://klbarnes20.github.io/caliper/reference/calculate_checkout_started.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Number of Trainees Who Have Started Checkout — calculate_checkout_started","text":"trainee_progress data.frame data frame containing checkout steps trainee, like 'get_involved', 'teaching_demo', 'welcome'. days_threshold integer number days since training consider. Default 90 days.","code":""},{"path":"https://klbarnes20.github.io/caliper/reference/calculate_checkout_started.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Number of Trainees Who Have Started Checkout — calculate_checkout_started","text":"integer Returns number trainees started checkout process.","code":""},{"path":"https://klbarnes20.github.io/caliper/reference/calculate_checkout_started.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Number of Trainees Who Have Started Checkout — calculate_checkout_started","text":"","code":"if (FALSE) {   raw_data <- data.frame(...)   n_started_checkout <- calculate_checkout_started(raw_data, 90) }"},{"path":"https://klbarnes20.github.io/caliper/reference/calculate_dropout_rate.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Instructor Checkout Dropout Rate — calculate_dropout_rate","title":"Calculate Instructor Checkout Dropout Rate — calculate_dropout_rate","text":"function calculates dropout rate among trainees started checkout process within specified number days since training.","code":""},{"path":"https://klbarnes20.github.io/caliper/reference/calculate_dropout_rate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Instructor Checkout Dropout Rate — calculate_dropout_rate","text":"","code":"calculate_dropout_rate(trainee_progress, days_threshold = 90)"},{"path":"https://klbarnes20.github.io/caliper/reference/calculate_dropout_rate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Instructor Checkout Dropout Rate — calculate_dropout_rate","text":"trainee_progress data.frame data frame containing progress indicators trainee. days_threshold integer number days since training consider. Default 90 days.","code":""},{"path":"https://klbarnes20.github.io/caliper/reference/calculate_dropout_rate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Instructor Checkout Dropout Rate — calculate_dropout_rate","text":"numeric Returns dropout rate percentage.","code":""},{"path":"https://klbarnes20.github.io/caliper/reference/calculate_dropout_rate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Instructor Checkout Dropout Rate — calculate_dropout_rate","text":"","code":"if (FALSE) {   raw_data <- data.frame(...)   dropout_rate <- calculate_dropout_rate(raw_data, 90) }"},{"path":"https://klbarnes20.github.io/caliper/reference/calculate_nps.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Net Promoter Score (NPS) — calculate_nps","title":"Calculate Net Promoter Score (NPS) — calculate_nps","text":"function calculates Net Promoter Score survey data based respondents' ratings. NPS measure customer loyalty calculated using formula: Percentage Promoters - Percentage Detractors. information NPS, visit: https://monkeylearn.com/blog/nps-analysis/","code":""},{"path":"https://klbarnes20.github.io/caliper/reference/calculate_nps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Net Promoter Score (NPS) — calculate_nps","text":"","code":"calculate_nps(dat, col)"},{"path":"https://klbarnes20.github.io/caliper/reference/calculate_nps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Net Promoter Score (NPS) — calculate_nps","text":"dat data frame containing survey data. col character string specifying name column containing NPS ratings (expected numeric).","code":""},{"path":"https://klbarnes20.github.io/caliper/reference/calculate_nps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Net Promoter Score (NPS) — calculate_nps","text":"data frame summarizing number percentage respondents category: Promoters, Passives, Detractors.","code":""},{"path":"https://klbarnes20.github.io/caliper/reference/calculate_nps.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Net Promoter Score (NPS) — calculate_nps","text":"","code":"# Example usage with a sample data frame sample_data <- data.frame(rating = sample(0:10, 100, replace = TRUE)) nps_result <- calculate_nps(sample_data, \"rating\") print(nps_result) #> # A tibble: 3 × 3 #>   Category  Number Percent #>   <chr>      <int>   <dbl> #> 1 Detractor     54    0.54 #> 2 Passive       28    0.28 #> 3 Promoter      18    0.18"},{"path":"https://klbarnes20.github.io/caliper/reference/calculate_rate.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the Rate as a Percentage — calculate_rate","title":"Calculate the Rate as a Percentage — calculate_rate","text":"function takes two numerical values input, smaller number (xsmaller) larger number (ylarger). returns rate percentage, calculated formula: (xsmaller / ylarger) * 100.","code":""},{"path":"https://klbarnes20.github.io/caliper/reference/calculate_rate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the Rate as a Percentage — calculate_rate","text":"","code":"calculate_rate(xsmaller, ylarger)"},{"path":"https://klbarnes20.github.io/caliper/reference/calculate_rate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the Rate as a Percentage — calculate_rate","text":"xsmaller Numeric; smaller value want compare. Must non-negative. ylarger Numeric; larger value want compare xsmaller. Must greater xsmaller.","code":""},{"path":"https://klbarnes20.github.io/caliper/reference/calculate_rate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the Rate as a Percentage — calculate_rate","text":"string representing rate percentage, rounded two decimal places.","code":""},{"path":"https://klbarnes20.github.io/caliper/reference/calculate_rate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the Rate as a Percentage — calculate_rate","text":"","code":"calculate_rate(50, 100) # Returns '50%' #> [1] \"50%\" calculate_rate(30, 120) # Returns '25%' #> [1] \"25%\" calculate_rate(0, 100)  # Returns '0%' #> [1] \"0%\""},{"path":"https://klbarnes20.github.io/caliper/reference/calculate_reengagement_rate.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Re-engagement Rate — calculate_reengagement_rate","title":"Calculate Re-engagement Rate — calculate_reengagement_rate","text":"function calculates re-engagement rate based number trainees earned badge within specified number days since training, typically longer period 6 months.","code":""},{"path":"https://klbarnes20.github.io/caliper/reference/calculate_reengagement_rate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Re-engagement Rate — calculate_reengagement_rate","text":"","code":"calculate_reengagement_rate(trainee_data, days_threshold = 180)"},{"path":"https://klbarnes20.github.io/caliper/reference/calculate_reengagement_rate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Re-engagement Rate — calculate_reengagement_rate","text":"trainee_data data.frame raw data frame containing trainee data. columns training instr_badge date strings. days_threshold integer time frame like calculate re-engagement rate, days. Default 180 days.","code":""},{"path":"https://klbarnes20.github.io/caliper/reference/calculate_reengagement_rate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Re-engagement Rate — calculate_reengagement_rate","text":"numeric Returns re-engagement rate percentage.","code":""},{"path":"https://klbarnes20.github.io/caliper/reference/calculate_reengagement_rate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Re-engagement Rate — calculate_reengagement_rate","text":"","code":"if (FALSE) {   raw_data <- data.frame(...)   reengagement_rate <- calculate_reengagement_rate(raw_data, 180) }"},{"path":"https://klbarnes20.github.io/caliper/reference/calculate_wksurvey_item_mean.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Mean of Workshop Survey Item Before and After Checkout Changes — calculate_wksurvey_item_mean","title":"Calculate Mean of Workshop Survey Item Before and After Checkout Changes — calculate_wksurvey_item_mean","text":"function calculates mean value specified workshop survey item, segmented time training re-changes went live.","code":""},{"path":"https://klbarnes20.github.io/caliper/reference/calculate_wksurvey_item_mean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Mean of Workshop Survey Item Before and After Checkout Changes — calculate_wksurvey_item_mean","text":"","code":"calculate_wksurvey_item_mean(data, item)"},{"path":"https://klbarnes20.github.io/caliper/reference/calculate_wksurvey_item_mean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Mean of Workshop Survey Item Before and After Checkout Changes — calculate_wksurvey_item_mean","text":"data data.frame data frame containing survey responses. Must include column 'submitted_at' item analyzed. item string column name survey item mean calculated.","code":""},{"path":"https://klbarnes20.github.io/caliper/reference/calculate_wksurvey_item_mean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Mean of Workshop Survey Item Before and After Checkout Changes — calculate_wksurvey_item_mean","text":"data.frame Returns data frame mean value item training re-changes, rounded two decimal places.","code":""},{"path":"https://klbarnes20.github.io/caliper/reference/calculate_wksurvey_item_mean.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Mean of Workshop Survey Item Before and After Checkout Changes — calculate_wksurvey_item_mean","text":"","code":"if (FALSE) {   mock_data <- data.frame(submitted_at =   as.Date(c(\"2023-08-15\", \"2023-08-13\")), instructors_clear_answers = c(4, 5))   mean_data <-   calculate_wksurvey_item_mean(mock_data, \"instructors_clear_answers\") }"},{"path":"https://klbarnes20.github.io/caliper/reference/clean_select_all_responses.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean and Summarize ","title":"Clean and Summarize ","text":"function processes survey data respondents select multiple answers (e.g., \"Select apply\" questions). separates responses, trims whitespace, counts occurrences unique response.","code":""},{"path":"https://klbarnes20.github.io/caliper/reference/clean_select_all_responses.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean and Summarize ","text":"","code":"clean_select_all_responses(dat, col)"},{"path":"https://klbarnes20.github.io/caliper/reference/clean_select_all_responses.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean and Summarize ","text":"dat data frame containing survey data. col character string specifying name column \"select \" responses.","code":""},{"path":"https://klbarnes20.github.io/caliper/reference/clean_select_all_responses.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean and Summarize ","text":"data frame row representing unique response specified column count survey.","code":""},{"path":"https://klbarnes20.github.io/caliper/reference/clean_select_all_responses.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clean and Summarize ","text":"","code":"# Example usage with a sample data frame sample_data <- data.frame(responses = c(\"Option 1, Option 2\", \"Option 2, Option 3\", \"Option 1, Option 3, Option 2\",\"Option 2\",\"Option 3\")) cleaned_responses <- clean_select_all_responses(sample_data, \"responses\") print(cleaned_responses) #> # A tibble: 3 × 2 #>   responses     n #>   <chr>     <int> #> 1 Option 1      2 #> 2 Option 2      4 #> 3 Option 3      3"},{"path":"https://klbarnes20.github.io/caliper/reference/count_trainings.html","id":null,"dir":"Reference","previous_headings":"","what":"Number of Trainings Trainers Have Taught — count_trainings","title":"Number of Trainings Trainers Have Taught — count_trainings","text":"Calculates total number trainings trainer taught, grouped active status.","code":""},{"path":"https://klbarnes20.github.io/caliper/reference/count_trainings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Number of Trainings Trainers Have Taught — count_trainings","text":"","code":"count_trainings(dat)"},{"path":"https://klbarnes20.github.io/caliper/reference/count_trainings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Number of Trainings Trainers Have Taught — count_trainings","text":"dat data.frame data frame containing columns 'personal', 'family', 'active_status', 'total_trainings'.","code":""},{"path":"https://klbarnes20.github.io/caliper/reference/count_trainings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Number of Trainings Trainers Have Taught — count_trainings","text":"data.frame Returns data frame columns 'personal', 'family', 'active_status', 'total_trainings', ordered 'active_status' 'total_trainings'.","code":""},{"path":"https://klbarnes20.github.io/caliper/reference/count_trainings.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Number of Trainings Trainers Have Taught — count_trainings","text":"","code":"if (FALSE) {   df <- data.frame(personal = c(\"Alice\", \"Bob\"),   family = c(\"Smith\", \"Jones\"),   active_status = c(\"Active\", \"Inactive\"), total_trainings = c(5, 2))   result <- count_trainings(df) }"},{"path":"https://klbarnes20.github.io/caliper/reference/count_trainings_rel_yr.html","id":null,"dir":"Reference","previous_headings":"","what":"Count of Trainings by Relative Year from Start of Training Career — count_trainings_rel_yr","title":"Count of Trainings by Relative Year from Start of Training Career — count_trainings_rel_yr","text":"Calculates number trainings conducted trainer, grouped career-relative year.","code":""},{"path":"https://klbarnes20.github.io/caliper/reference/count_trainings_rel_yr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count of Trainings by Relative Year from Start of Training Career — count_trainings_rel_yr","text":"","code":"count_trainings_rel_yr(dat)"},{"path":"https://klbarnes20.github.io/caliper/reference/count_trainings_rel_yr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count of Trainings by Relative Year from Start of Training Career — count_trainings_rel_yr","text":"dat data.frame data frame containing columns 'family', 'personal', 'start' (start date training).","code":""},{"path":"https://klbarnes20.github.io/caliper/reference/count_trainings_rel_yr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count of Trainings by Relative Year from Start of Training Career — count_trainings_rel_yr","text":"data.frame Returns data frame grouped 'year' 'relative_year', summarizing number trainings relative year.","code":""},{"path":"https://klbarnes20.github.io/caliper/reference/count_trainings_rel_yr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Count of Trainings by Relative Year from Start of Training Career — count_trainings_rel_yr","text":"","code":"if (FALSE) {   df <- data.frame(family = c(\"Smith\", \"Jones\"),   personal = c(\"Alice\", \"Bob\"),   start = c(\"2021-05-01\", \"2022-04-01\"))   result <- count_trainings_rel_yr(df) }"},{"path":"https://klbarnes20.github.io/caliper/reference/count_trainings_yr.html","id":null,"dir":"Reference","previous_headings":"","what":"Count of Trainings Conducted by Trainers by Year — count_trainings_yr","title":"Count of Trainings Conducted by Trainers by Year — count_trainings_yr","text":"Calculates number trainings conducted trainer, grouped year.","code":""},{"path":"https://klbarnes20.github.io/caliper/reference/count_trainings_yr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count of Trainings Conducted by Trainers by Year — count_trainings_yr","text":"","code":"count_trainings_yr(dat)"},{"path":"https://klbarnes20.github.io/caliper/reference/count_trainings_yr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count of Trainings Conducted by Trainers by Year — count_trainings_yr","text":"dat data.frame data frame containing columns 'family', 'personal', 'start' (start date training).","code":""},{"path":"https://klbarnes20.github.io/caliper/reference/count_trainings_yr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count of Trainings Conducted by Trainers by Year — count_trainings_yr","text":"data.frame Returns data frame grouped 'family', 'personal', 'year', number trainings year.","code":""},{"path":"https://klbarnes20.github.io/caliper/reference/count_trainings_yr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Count of Trainings Conducted by Trainers by Year — count_trainings_yr","text":"","code":"if (FALSE) {   df <- data.frame(family = c(\"Smith\", \"Jones\"),    personal = c(\"Alice\", \"Bob\"),    start = c(\"2021-05-01\", \"2022-04-01\"))   result <- count_trainings_yr(df) }"},{"path":"https://klbarnes20.github.io/caliper/reference/custom_scale_x_discrete.html","id":null,"dir":"Reference","previous_headings":"","what":"Format and Text Wrap X Axis Labels in ggplot2 — custom_scale_x_discrete","title":"Format and Text Wrap X Axis Labels in ggplot2 — custom_scale_x_discrete","text":"function applies text wrapping x-axis labels ggplot2 plot. allows customizing width wrap, making long labels readable breaking multiple lines.","code":""},{"path":"https://klbarnes20.github.io/caliper/reference/custom_scale_x_discrete.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format and Text Wrap X Axis Labels in ggplot2 — custom_scale_x_discrete","text":"","code":"custom_scale_x_discrete(labels, wrap_width = 15)"},{"path":"https://klbarnes20.github.io/caliper/reference/custom_scale_x_discrete.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format and Text Wrap X Axis Labels in ggplot2 — custom_scale_x_discrete","text":"labels vector labels used x-axis. labels correspond categories values present x-axis. wrap_width integer specifying maximum width (characters) wrapping label onto next line. default value 15.","code":""},{"path":"https://klbarnes20.github.io/caliper/reference/custom_scale_x_discrete.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format and Text Wrap X Axis Labels in ggplot2 — custom_scale_x_discrete","text":"ggplot2 scale layer, specifically modified scale_x_discrete, labels formatted wrap text based specified wrap_width.","code":""},{"path":"https://klbarnes20.github.io/caliper/reference/custom_scale_x_discrete.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format and Text Wrap X Axis Labels in ggplot2 — custom_scale_x_discrete","text":"","code":"# Example using the diamonds dataset from ggplot2 library(ggplot2) data(diamonds)  # Create artificial long labels for illustration long_labels <- c(\"Fair Quality Cut\", \"Good Quality Cut\", \"Very Good Quality Cut\",                  \"Premium Quality Cut\", \"Ideal Quality Cut\") names(long_labels) <- levels(diamonds$cut)  basic_plot <- ggplot(diamonds, aes(x = cut, y = price)) + geom_bar(stat = \"identity\") # Apply custom scale with wrapped labels basic_plot + custom_scale_x_discrete(labels = long_labels, wrap_width = 10)"},{"path":"https://klbarnes20.github.io/caliper/reference/extract_year_quarter.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Quarter and Year Information from Data Frame Name — extract_year_quarter","title":"Extract Quarter and Year Information from Data Frame Name — extract_year_quarter","text":"function extracts quarter year information given data frame name. name expected format \"Q(1-4)_(YYYY)\" (1-4) quarter (YYYY) year.","code":""},{"path":"https://klbarnes20.github.io/caliper/reference/extract_year_quarter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Quarter and Year Information from Data Frame Name — extract_year_quarter","text":"","code":"extract_year_quarter(filename)"},{"path":"https://klbarnes20.github.io/caliper/reference/extract_year_quarter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Quarter and Year Information from Data Frame Name — extract_year_quarter","text":"filename Dataframe; data frame whose name want analyze.","code":""},{"path":"https://klbarnes20.github.io/caliper/reference/extract_year_quarter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Quarter and Year Information from Data Frame Name — extract_year_quarter","text":"List; list containing two elements: 'quarter' 'year', character strings. function throw error name match expected format.","code":""},{"path":"https://klbarnes20.github.io/caliper/reference/extract_year_quarter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Quarter and Year Information from Data Frame Name — extract_year_quarter","text":"","code":"if (FALSE) {   # Create a data frame with a name that follows the format   Q1_2034 <- data.frame()   result <- extract_year_quarter(Q1_2034)   print(result) # Should print list(quarter = \"Q1\", year = \"2034\") }"},{"path":"https://klbarnes20.github.io/caliper/reference/fetch_airtable.html","id":null,"dir":"Reference","previous_headings":"","what":"Fetch Data from Airtable — fetch_airtable","title":"Fetch Data from Airtable — fetch_airtable","text":"Fetches data Airtable base data frame. function relies airtabler package. can find required id db_name parameters Airtable API documentation.","code":""},{"path":"https://klbarnes20.github.io/caliper/reference/fetch_airtable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fetch Data from Airtable — fetch_airtable","text":"","code":"fetch_airtable(id, db_name)"},{"path":"https://klbarnes20.github.io/caliper/reference/fetch_airtable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fetch Data from Airtable — fetch_airtable","text":"id Character; base ID corresponding Airtable base. can found Airtable API documentation. db_name Character; name database (table) within Airtable base fetch data .","code":""},{"path":"https://klbarnes20.github.io/caliper/reference/fetch_airtable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fetch Data from Airtable — fetch_airtable","text":"data frame containing records specified Airtable database (table).","code":""},{"path":"https://klbarnes20.github.io/caliper/reference/fetch_airtable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fetch Data from Airtable — fetch_airtable","text":"","code":"if (FALSE) {   # Make sure to have `airtabler` package installed and set up   # Example usage:   data_fetched <- fetch_airtable(id = \"your_base_id\", db_name = \"your_db_name\") }"},{"path":"https://klbarnes20.github.io/caliper/reference/fetch_redash.html","id":null,"dir":"Reference","previous_headings":"","what":"Fetch Data from Redash — fetch_redash","title":"Fetch Data from Redash — fetch_redash","text":"' function fetches data Redash instance using specific query ID API key. API key fetched environment variable named REDASH_QUERY_<query_id>. data read data frame using utils::read.csv returned.","code":""},{"path":"https://klbarnes20.github.io/caliper/reference/fetch_redash.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fetch Data from Redash — fetch_redash","text":"","code":"fetch_redash(query_id)"},{"path":"https://klbarnes20.github.io/caliper/reference/fetch_redash.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fetch Data from Redash — fetch_redash","text":"query_id Numeric Character; query ID corresponding Redash query. ID can found Redash UI.Numeric Character; query ID corresponding Redash query. ID can found Redash UI.","code":""},{"path":"https://klbarnes20.github.io/caliper/reference/fetch_redash.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fetch Data from Redash — fetch_redash","text":"data frame containing results specified Redash query.","code":""},{"path":"https://klbarnes20.github.io/caliper/reference/fetch_redash.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fetch Data from Redash — fetch_redash","text":"","code":"if (FALSE) {   # Make sure to set environment variable for API key like so:   # Sys.setenv(REDASH_QUERY_17 = \"<your_api_key>\")   test <- fetch_redash(17) }"},{"path":"https://klbarnes20.github.io/caliper/reference/gather_and_summarise.html","id":null,"dir":"Reference","previous_headings":"","what":"Gather Questions into One Table for Graphing — gather_and_summarise","title":"Gather Questions into One Table for Graphing — gather_and_summarise","text":"function transforms survey data converting selected question columns long format suitable comparison graphing. facilitates analysis across multiple questions.","code":""},{"path":"https://klbarnes20.github.io/caliper/reference/gather_and_summarise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gather Questions into One Table for Graphing — gather_and_summarise","text":"","code":"gather_and_summarise(dat, questions, levels, labels)"},{"path":"https://klbarnes20.github.io/caliper/reference/gather_and_summarise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gather Questions into One Table for Graphing — gather_and_summarise","text":"dat data frame containing survey data. questions character vector column names 'dat' representing questions summarized. levels vector levels (possible responses) questions. labels vector labels corresponding 'levels' vector re-labeling responses.","code":""},{"path":"https://klbarnes20.github.io/caliper/reference/gather_and_summarise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gather Questions into One Table for Graphing — gather_and_summarise","text":"data frame long format, row representing response question, along count response type.","code":""},{"path":"https://klbarnes20.github.io/caliper/reference/gather_and_summarise.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gather Questions into One Table for Graphing — gather_and_summarise","text":"","code":"# Example usage with a sample data frame sample_data <- data.frame(Q1 = sample(1:5, 100, replace = TRUE), Q2 = sample(1:5, 100, replace = TRUE)) questions <- c(\"Q1\", \"Q2\") levels <- 1:5 labels <- c(\"Strongly Disagree\", \"Disagree\", \"Neutral\", \"Agree\", \"Strongly Agree\") summarised_data <- gather_and_summarise(sample_data, questions, levels, labels) print(summarised_data) #> # A tibble: 10 × 3 #> # Groups:   Question [2] #>    Question Answer            Number #>    <chr>    <fct>              <int> #>  1 Q1       Strongly Disagree     14 #>  2 Q1       Disagree              25 #>  3 Q1       Neutral               27 #>  4 Q1       Agree                 15 #>  5 Q1       Strongly Agree        19 #>  6 Q2       Strongly Disagree     16 #>  7 Q2       Disagree              23 #>  8 Q2       Neutral               17 #>  9 Q2       Agree                 19 #> 10 Q2       Strongly Agree        25"},{"path":"https://klbarnes20.github.io/caliper/reference/generate_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"This function generates a bar plot using ggplot2 and a custom Carpentries theme.\nIt allows for specifying variables for the x-axis, y-axis, and fill color. The plot is faceted by year and quarter.\nText labels indicating the y-values are also included above the bars. — generate_plot","title":"This function generates a bar plot using ggplot2 and a custom Carpentries theme.\nIt allows for specifying variables for the x-axis, y-axis, and fill color. The plot is faceted by year and quarter.\nText labels indicating the y-values are also included above the bars. — generate_plot","text":"function generates bar plot using ggplot2 custom Carpentries theme. allows specifying variables x-axis, y-axis, fill color. plot faceted year quarter. Text labels indicating y-values also included bars.","code":""},{"path":"https://klbarnes20.github.io/caliper/reference/generate_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function generates a bar plot using ggplot2 and a custom Carpentries theme.\nIt allows for specifying variables for the x-axis, y-axis, and fill color. The plot is faceted by year and quarter.\nText labels indicating the y-values are also included above the bars. — generate_plot","text":"","code":"generate_plot(dat, x, y, fill = NULL)"},{"path":"https://klbarnes20.github.io/caliper/reference/generate_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function generates a bar plot using ggplot2 and a custom Carpentries theme.\nIt allows for specifying variables for the x-axis, y-axis, and fill color. The plot is faceted by year and quarter.\nText labels indicating the y-values are also included above the bars. — generate_plot","text":"dat Dataframe; data frame containing data plotted. x Character; name variable plotted x-axis.Character; name variable plotted x-axis. y Character; name variable plotted y-axis. fill Character; Optional. name variable used fill colors.","code":""},{"path":"https://klbarnes20.github.io/caliper/reference/generate_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function generates a bar plot using ggplot2 and a custom Carpentries theme.\nIt allows for specifying variables for the x-axis, y-axis, and fill color. The plot is faceted by year and quarter.\nText labels indicating the y-values are also included above the bars. — generate_plot","text":"ggplot object representing generated plot.","code":""},{"path":"https://klbarnes20.github.io/caliper/reference/generate_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"This function generates a bar plot using ggplot2 and a custom Carpentries theme.\nIt allows for specifying variables for the x-axis, y-axis, and fill color. The plot is faceted by year and quarter.\nText labels indicating the y-values are also included above the bars. — generate_plot","text":"","code":"if (FALSE) {   # Assume 'data_frame' is a data frame with appropriate columns   example_plot <-   generate_plot(dat = data_frame, x = \"variable_x\",   y = \"variable_y\", fill = \"variable_fill\")   print(example_plot) }"},{"path":"https://klbarnes20.github.io/caliper/reference/get_env_var.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve Environment Variable Value — get_env_var","title":"Retrieve Environment Variable Value — get_env_var","text":"function fetches value specified environment variable. environment variable set, function stop execution return error message.","code":""},{"path":"https://klbarnes20.github.io/caliper/reference/get_env_var.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve Environment Variable Value — get_env_var","text":"","code":"get_env_var(var)"},{"path":"https://klbarnes20.github.io/caliper/reference/get_env_var.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve Environment Variable Value — get_env_var","text":"var Character; name environment variable retrieve.","code":""},{"path":"https://klbarnes20.github.io/caliper/reference/get_env_var.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve Environment Variable Value — get_env_var","text":"value specified environment variable character string. Throws error environment variable set.","code":""},{"path":"https://klbarnes20.github.io/caliper/reference/get_env_var.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve Environment Variable Value — get_env_var","text":"","code":"if (FALSE) {   # Set an example environment variable   Sys.setenv(EXAMPLE_VAR = \"example_value\")    # Fetch the value of the environment variable   val <- get_env_var(\"EXAMPLE_VAR\")   print(val)  # Output should be \"example_value\" }"},{"path":"https://klbarnes20.github.io/caliper/reference/group_by_summarise.html","id":null,"dir":"Reference","previous_headings":"","what":"Group Data by a Specified Column and Summarize Counts — group_by_summarise","title":"Group Data by a Specified Column and Summarize Counts — group_by_summarise","text":"function groups data frame values specified column, calculates count records group. Optionally, can convert counts percentages.","code":""},{"path":"https://klbarnes20.github.io/caliper/reference/group_by_summarise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Group Data by a Specified Column and Summarize Counts — group_by_summarise","text":"","code":"group_by_summarise(dat, col, convert_to_percent = FALSE)"},{"path":"https://klbarnes20.github.io/caliper/reference/group_by_summarise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Group Data by a Specified Column and Summarize Counts — group_by_summarise","text":"dat data frame analyzed. col character string specifying column name group data. convert_to_percent logical value; TRUE, convert counts percentages. Default FALSE.","code":""},{"path":"https://klbarnes20.github.io/caliper/reference/group_by_summarise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Group Data by a Specified Column and Summarize Counts — group_by_summarise","text":"data frame group (specified column) count (optionally, percentage).","code":""},{"path":"https://klbarnes20.github.io/caliper/reference/group_by_summarise.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Group Data by a Specified Column and Summarize Counts — group_by_summarise","text":"","code":"# Example usage with a sample data frame set.seed(1)  # for reproducibility sample_data <- data.frame(category = sample(c(\"A\", \"B\", \"C\"), 120, replace = TRUE, prob = c(0.3, 0.5, 0.2))) summary_table <- group_by_summarise(sample_data, \"category\", convert_to_percent = TRUE) print(summary_table) #> # A tibble: 3 × 3 #>   category count percent #>   <chr>    <int>   <dbl> #> 1 B           63    52.5 #> 2 A           37    30.8 #> 3 C           20    16.7"},{"path":"https://klbarnes20.github.io/caliper/reference/load_libraries.html","id":null,"dir":"Reference","previous_headings":"","what":"Load a List of R Libraries, Installing if Necessary — load_libraries","title":"Load a List of R Libraries, Installing if Necessary — load_libraries","text":"function iterates list R package names, checks installed, loads R session. installs package already installed.","code":""},{"path":"https://klbarnes20.github.io/caliper/reference/load_libraries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load a List of R Libraries, Installing if Necessary — load_libraries","text":"","code":"load_libraries(libraries)"},{"path":"https://klbarnes20.github.io/caliper/reference/load_libraries.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load a List of R Libraries, Installing if Necessary — load_libraries","text":"libraries character vector R package names loaded.","code":""},{"path":"https://klbarnes20.github.io/caliper/reference/load_libraries.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load a List of R Libraries, Installing if Necessary — load_libraries","text":"None; function called side effects (loading libraries).","code":""},{"path":"https://klbarnes20.github.io/caliper/reference/load_libraries.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load a List of R Libraries, Installing if Necessary — load_libraries","text":"","code":"# Example usage to load dplyr and ggplot2 load_libraries(c(\"dplyr\", \"ggplot2\")) #> Loading required package: dplyr #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union"},{"path":"https://klbarnes20.github.io/caliper/reference/map_availability.html","id":null,"dir":"Reference","previous_headings":"","what":"Simplify Trainer Availability Information — map_availability","title":"Simplify Trainer Availability Information — map_availability","text":"function takes data frame simplifies availability information trainers. maps verbose availability statements simplified categories (\"yes\", \"maybe\", \"\"). function searches column name matching pattern related 'availability teach' performs mapping column.","code":""},{"path":"https://klbarnes20.github.io/caliper/reference/map_availability.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simplify Trainer Availability Information — map_availability","text":"","code":"map_availability(dat)"},{"path":"https://klbarnes20.github.io/caliper/reference/map_availability.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simplify Trainer Availability Information — map_availability","text":"dat Dataframe; data frame containing trainer availability information. Comes Trainer Quarterly Availability Form.","code":""},{"path":"https://klbarnes20.github.io/caliper/reference/map_availability.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simplify Trainer Availability Information — map_availability","text":"Dataframe; modified data frame simplified 'availability' column. Throws error column multiple columns match pattern availability.","code":""},{"path":"https://klbarnes20.github.io/caliper/reference/map_availability.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simplify Trainer Availability Information — map_availability","text":"","code":"if (FALSE) {   # Assume 'trainer_data' is a data frame with an appropriate availability column   simplified_data <- map_availability(trainer_data)   print(simplified_data) }"},{"path":"https://klbarnes20.github.io/caliper/reference/map_scheduling_group.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Scheduling Groups — map_scheduling_group","title":"Create Scheduling Groups — map_scheduling_group","text":"Create Scheduling Groups","code":""},{"path":"https://klbarnes20.github.io/caliper/reference/map_scheduling_group.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Scheduling Groups — map_scheduling_group","text":"","code":"map_scheduling_group(df)"},{"path":"https://klbarnes20.github.io/caliper/reference/map_scheduling_group.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Scheduling Groups — map_scheduling_group","text":"df Dataframe; data frame containing timezone information. Comes Trainer Quarterly Availability Form.","code":""},{"path":"https://klbarnes20.github.io/caliper/reference/map_scheduling_group.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Scheduling Groups — map_scheduling_group","text":"Dataframe; data frame additional 'sched_group' column. Throws error matching column multiple matching columns found.","code":""},{"path":"https://klbarnes20.github.io/caliper/reference/map_scheduling_group.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Scheduling Groups — map_scheduling_group","text":"","code":"if (FALSE) {   # Assume 'data_with_timezones' is a data frame with an appropriate timezone column   grouped_timezones <- map_timezones(data_with_timezones)   print(grouped_timezones) }"},{"path":"https://klbarnes20.github.io/caliper/reference/map_timezones.html","id":null,"dir":"Reference","previous_headings":"","what":"Simplify and Group Timezone Information — map_timezones","title":"Simplify and Group Timezone Information — map_timezones","text":"function takes data frame maps verbose timezone information simplified timezone groups. identifies column containing timezone information based pattern renames 'timezone'.","code":""},{"path":"https://klbarnes20.github.io/caliper/reference/map_timezones.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simplify and Group Timezone Information — map_timezones","text":"","code":"map_timezones(df)"},{"path":"https://klbarnes20.github.io/caliper/reference/map_timezones.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simplify and Group Timezone Information — map_timezones","text":"df Dataframe; data frame containing timezone information. Comes Trainer Quarterly Availability Form.","code":""},{"path":"https://klbarnes20.github.io/caliper/reference/map_timezones.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simplify and Group Timezone Information — map_timezones","text":"Dataframe; data frame renamed 'timezone' column additional 'TZgroup' column containing simplified timezone labels. Throws error matching column multiple matching columns found.","code":""},{"path":"https://klbarnes20.github.io/caliper/reference/map_timezones.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simplify and Group Timezone Information — map_timezones","text":"","code":"if (FALSE) {   # Assume 'data_with_timezones' is a data frame with an appropriate timezone column   grouped_timezones <- map_timezones(data_with_timezones)   print(grouped_timezones) }"},{"path":"https://klbarnes20.github.io/caliper/reference/percent_label.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Percent Sign to Data Label — percent_label","title":"Add Percent Sign to Data Label — percent_label","text":"function formats numeric values percentages. rounds numbers specified decimal places appends percent sign.","code":""},{"path":"https://klbarnes20.github.io/caliper/reference/percent_label.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Percent Sign to Data Label — percent_label","text":"","code":"percent_label(x, decimal = 1)"},{"path":"https://klbarnes20.github.io/caliper/reference/percent_label.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Percent Sign to Data Label — percent_label","text":"x Numeric vector; values formatted percentages. decimal Integer; number decimal places round numeric values. Defaults 1, indicating one decimal place.","code":""},{"path":"https://klbarnes20.github.io/caliper/reference/percent_label.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Percent Sign to Data Label — percent_label","text":"character vector numeric values formatted percentages.","code":""},{"path":"https://klbarnes20.github.io/caliper/reference/percent_label.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Percent Sign to Data Label — percent_label","text":"","code":"# Example usage of percent_label numeric_values <- c(0.123, 0.456, 0.789) percent_labels <- percent_label(numeric_values) print(percent_labels) #> [1] \"0.1%\" \"0.5%\" \"0.8%\" # Output: \"12.3%\", \"45.6%\", \"78.9%\""},{"path":"https://klbarnes20.github.io/caliper/reference/preprocess_trainee_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Preprocess Trainee Data — preprocess_trainee_data","title":"Preprocess Trainee Data — preprocess_trainee_data","text":"function preprocesses trainee data converting columns dates calculating number days training date current date (days_from_training) training date badging date (days_to_badge).","code":""},{"path":"https://klbarnes20.github.io/caliper/reference/preprocess_trainee_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preprocess Trainee Data — preprocess_trainee_data","text":"","code":"preprocess_trainee_data(trainee_data)"},{"path":"https://klbarnes20.github.io/caliper/reference/preprocess_trainee_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preprocess Trainee Data — preprocess_trainee_data","text":"trainee_data data.frame data frame containing raw trainee data. Expected columns named \"training\" \"instr_badge\", represent training instruction badging dates, respectively.","code":""},{"path":"https://klbarnes20.github.io/caliper/reference/preprocess_trainee_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Preprocess Trainee Data — preprocess_trainee_data","text":"data.frame preprocessed data frame added columns: days_from_training: Number days training date today's date. days_to_badge: Number days training date badging date.","code":""},{"path":"https://klbarnes20.github.io/caliper/reference/preprocess_trainee_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Preprocess Trainee Data — preprocess_trainee_data","text":"","code":"if (FALSE) {   raw_trainee_data <- data.frame(     training = c(\"2023-01-01\", \"2023-01-10\"),     instr_badge = c(\"2023-02-01\", NA)   )   preprocessed_data <- preprocess_trainee_data(raw_trainee_data)   print(preprocessed_data) }"},{"path":"https://klbarnes20.github.io/caliper/reference/save_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Save and Export ggplot2 Plots to a Specified Directory — save_plot","title":"Save and Export ggplot2 Plots to a Specified Directory — save_plot","text":"function saves ggplot2 plot PNG file specified directory. plot saved 'programs/","code":""},{"path":"https://klbarnes20.github.io/caliper/reference/save_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save and Export ggplot2 Plots to a Specified Directory — save_plot","text":"","code":"save_plot(dir, plot)"},{"path":"https://klbarnes20.github.io/caliper/reference/save_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save and Export ggplot2 Plots to a Specified Directory — save_plot","text":"dir Character; name subdirectory 'programs' plot saved. plot ggplot; ggplot2 plot object want save.","code":""},{"path":"https://klbarnes20.github.io/caliper/reference/save_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save and Export ggplot2 Plots to a Specified Directory — save_plot","text":"Saves plot PNG file returns full path file saved.","code":""},{"path":"https://klbarnes20.github.io/caliper/reference/save_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save and Export ggplot2 Plots to a Specified Directory — save_plot","text":"","code":"if (FALSE) {   # Assume 'some_plot' is a ggplot2 plot object   saved_path <- save_plot(dir = \"exampleDir\", plot = some_plot)   print(saved_path) }"},{"path":"https://klbarnes20.github.io/caliper/reference/set_time_frame.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter Data Frame by a Date Range — set_time_frame","title":"Filter Data Frame by a Date Range — set_time_frame","text":"function filters data frame based specific date range within specified column. function utilizes dplyr filter rows date specified column falls start end dates, exclusive.","code":""},{"path":"https://klbarnes20.github.io/caliper/reference/set_time_frame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter Data Frame by a Date Range — set_time_frame","text":"","code":"set_time_frame(dat, col, start, end)"},{"path":"https://klbarnes20.github.io/caliper/reference/set_time_frame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter Data Frame by a Date Range — set_time_frame","text":"dat Dataframe; data frame wish filter. col Character; column name containing date information filter . start Date; start date date range 'YYYY-MM-DD' format. end Date; end date date range 'YYYY-MM-DD' format.Date; end date date range 'YYYY-MM-DD' format.Date; end date date range 'YYYY-MM-DD' format.","code":""},{"path":"https://klbarnes20.github.io/caliper/reference/set_time_frame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter Data Frame by a Date Range — set_time_frame","text":"data frame containing rows meet date range criteria.data frame containing rows meet date range criteria.","code":""},{"path":"https://klbarnes20.github.io/caliper/reference/set_time_frame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter Data Frame by a Date Range — set_time_frame","text":"","code":"if (FALSE) {   trainee_progress <- fetch_redash(388)   result <- set_time_frame(dat = trainee_progress,   col = \"training\", start = \"2021-01-01\",   end = \"2021-12-31\")   head(result) }"},{"path":"https://klbarnes20.github.io/caliper/reference/summarise_data_by_qtr.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize Trainer Availability by Quarter — summarise_data_by_qtr","title":"Summarize Trainer Availability by Quarter — summarise_data_by_qtr","text":"function takes data frame containing trainer availability data, processes , returns summarized version. summary grouped year, quarter, availability status. Currently, year quarter hard-coded \"2034\" \"1\", respectively.","code":""},{"path":"https://klbarnes20.github.io/caliper/reference/summarise_data_by_qtr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize Trainer Availability by Quarter — summarise_data_by_qtr","text":"","code":"summarise_data_by_qtr(dat)"},{"path":"https://klbarnes20.github.io/caliper/reference/summarise_data_by_qtr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize Trainer Availability by Quarter — summarise_data_by_qtr","text":"dat Dataframe; original data frame containing trainer availability data. Must contain column can mapped 'availability' map_availability() function.","code":""},{"path":"https://klbarnes20.github.io/caliper/reference/summarise_data_by_qtr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize Trainer Availability by Quarter — summarise_data_by_qtr","text":"Dataframe; new data frame containing number trainers available, maybe available, available, grouped year quarter.","code":""},{"path":[]},{"path":"https://klbarnes20.github.io/caliper/reference/summarise_data_by_qtr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarize Trainer Availability by Quarter — summarise_data_by_qtr","text":"","code":"if (FALSE) {   # Assuming 'trainer_data' is a data frame containing availability info   summarized_data <- summarise_data_by_qtr(trainer_data)   print(summarized_data) }"},{"path":"https://klbarnes20.github.io/caliper/reference/summarise_data_by_tz.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize Trainer Availability by Timezone Group and Quarter — summarise_data_by_tz","title":"Summarize Trainer Availability by Timezone Group and Quarter — summarise_data_by_tz","text":"function takes data frame trainer availability timezone information, applies mapping summarization operations, returns new data frame. summarized data grouped year, quarter, timezone group, availability status. Note year quarter currently hard-coded \"2034\" \"1\", respectively.","code":""},{"path":"https://klbarnes20.github.io/caliper/reference/summarise_data_by_tz.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize Trainer Availability by Timezone Group and Quarter — summarise_data_by_tz","text":"","code":"summarise_data_by_tz(dat)"},{"path":"https://klbarnes20.github.io/caliper/reference/summarise_data_by_tz.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize Trainer Availability by Timezone Group and Quarter — summarise_data_by_tz","text":"dat Dataframe; Contains original trainer data including availability timezones. Must columns can mapped 'availability' 'timezones' map_availability() map_timezones() functions, respectively.","code":""},{"path":"https://klbarnes20.github.io/caliper/reference/summarise_data_by_tz.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize Trainer Availability by Timezone Group and Quarter — summarise_data_by_tz","text":"Dataframe; new data frame containing number trainers timezone group, broken availability status, grouped year quarter.","code":""},{"path":[]},{"path":"https://klbarnes20.github.io/caliper/reference/summarise_data_by_tz.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarize Trainer Availability by Timezone Group and Quarter — summarise_data_by_tz","text":"","code":"if (FALSE) {   # Assuming 'trainer_data' is a data frame with availability and timezone info   summarized_data <- summarise_data_by_tz(trainer_data)   print(summarized_data) }"},{"path":"https://klbarnes20.github.io/caliper/reference/trainees_n_days.html","id":null,"dir":"Reference","previous_headings":"","what":"Count of Trainees Who Have Passed a Given Number of Days Since Training — trainees_n_days","title":"Count of Trainees Who Have Passed a Given Number of Days Since Training — trainees_n_days","text":"function calculates number trainees past specified number days since training.","code":""},{"path":"https://klbarnes20.github.io/caliper/reference/trainees_n_days.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count of Trainees Who Have Passed a Given Number of Days Since Training — trainees_n_days","text":"","code":"trainees_n_days(trainee_data, days_threshold = 90)"},{"path":"https://klbarnes20.github.io/caliper/reference/trainees_n_days.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count of Trainees Who Have Passed a Given Number of Days Since Training — trainees_n_days","text":"trainee_data data.frame raw data frame containing trainee data columns training instr_badge date strings. days_threshold integer number days past training date consider. Defaults 90 days.","code":""},{"path":"https://klbarnes20.github.io/caliper/reference/trainees_n_days.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count of Trainees Who Have Passed a Given Number of Days Since Training — trainees_n_days","text":"integer Returns count trainees past specified number days since training.","code":""},{"path":"https://klbarnes20.github.io/caliper/reference/trainees_n_days.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Count of Trainees Who Have Passed a Given Number of Days Since Training — trainees_n_days","text":"","code":"if (FALSE) {   raw_trainee_data <- data.frame(     training = c(\"2023-01-01\", \"2023-01-10\"),     instr_badge = c(\"2023-02-01\", NA)   )   count <- trainees_n_days(raw_trainee_data, 90)   print(count) }"}]
